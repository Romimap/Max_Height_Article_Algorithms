[gd_scene load_steps=16 format=3 uid="uid://dfnimumvxp0k"]

[ext_resource type="Texture2D" uid="uid://ddmxcyfa8owbt" path="res://textures/PavingStones131_2K-JPG_Displacement.jpg" id="1_eteoq"]
[ext_resource type="Texture2D" uid="uid://oodh88cxqm68" path="res://textures/Rock051_2K-JPG_Displacement.jpg" id="1_lwhil"]
[ext_resource type="Texture2D" uid="uid://cq5da06th7sx1" path="res://textures/Ground054_2K-JPG_Displacement.jpg" id="2_ndve1"]
[ext_resource type="Texture2D" uid="uid://7kuthv538rm5" path="res://textures/Ground067_2K-JPG_Displacement.jpg" id="2_riuh6"]
[ext_resource type="Texture2D" uid="uid://c0tb1adb80m54" path="res://textures/Rock051_2K-JPG_Color.png" id="3_0cb56"]
[ext_resource type="Texture2D" uid="uid://dq5q5lcn0u8ya" path="res://textures/PavingStones131_2K-JPG_Color.png" id="3_4o2tq"]
[ext_resource type="Texture2D" uid="uid://bltvqbw1jdta1" path="res://textures/Ground067_2K-JPG_Color.png" id="4_k6hvb"]
[ext_resource type="Texture2D" uid="uid://bclrekg4uhtgc" path="res://textures/Ground054_2K-JPG_Color.png" id="4_ok2eu"]
[ext_resource type="Script" path="res://screenshot.gd" id="5_cke6x"]

[sub_resource type="Shader" id="Shader_3uos0"]
code = "shader_type canvas_item;

uniform sampler2D T1 : repeat_enable, filter_linear_mipmap;
uniform sampler2D T2 : repeat_enable, filter_linear_mipmap;
uniform sampler2D S1 : repeat_enable, filter_linear_mipmap;
uniform sampler2D S2 : repeat_enable, filter_linear_mipmap;
uniform float lambda = 0.00; 

void vertex() {
	UV = UV * vec2(1.0, 1.0) * 0.5 + 0.5;
}

float Phi(float x) {
	return tanh(0.85 * x) * 0.5 + 0.5;
}

void fragment() {
	vec4 t1 = texture(T1, UV);
	vec4 t2 = texture(T2, UV + vec2(0.5));
	
	float s1 = texture(S1, UV).x - textureLod(S1, vec2(0.5), 100).x;
	float s2 = texture(S2, UV + vec2(0.5)).x - textureLod(S2, vec2(0.5), 100).x;
	
	float v1 = UV.x * 0.6 + 0.05;
	float v2 = 1.0 - v1;
	
	
	float w = 0.0;
	if (lambda <= 0.00001) {
		w = (s1 + v1 > s2 + v2) ? 1.0 : 0.0;
	} else {
		w = 1.0 - Phi(((s2 + v2) - (s1 + v1))/sqrt(lambda * lambda + lambda * lambda));
	}
	
	COLOR = mix(t2, t1, w);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_qe4i8"]
shader = SubResource("Shader_3uos0")
shader_parameter/lambda = 0.015
shader_parameter/T1 = ExtResource("3_4o2tq")
shader_parameter/T2 = ExtResource("4_k6hvb")
shader_parameter/S1 = ExtResource("1_eteoq")
shader_parameter/S2 = ExtResource("2_riuh6")

[sub_resource type="Shader" id="Shader_xfafi"]
code = "shader_type canvas_item;

uniform sampler2D T1 : repeat_enable, filter_linear_mipmap;
uniform sampler2D T2 : repeat_enable, filter_linear_mipmap;
uniform sampler2D S1 : repeat_enable, filter_linear_mipmap;
uniform sampler2D S2 : repeat_enable, filter_linear_mipmap;
uniform float lambda = 0.00; 

void vertex() {
	UV = UV * vec2(1.0, 0.25);
}

float Phi(float x) {
	return tanh(0.85 * x) * 0.5 + 0.5;
}

void fragment() {
	vec4 t1 = texture(T1, UV);
	vec4 t2 = texture(T2, UV + vec2(0.5));
	
	float s1 = texture(S1, UV).x - textureLod(S1, vec2(0.5), 100).x;
	float s2 = texture(S2, UV + vec2(0.5)).x - textureLod(S2, vec2(0.5), 100).x;
	
	float v1 = ((1.0 - UV.x) - 0.5) * 0.8 + 0.5;
	float v2 = 1.0 - v1;
	
	float w = 0.0;
	if (lambda <= 0.00001) {
		w = (s1 + v1 > s2 + v2) ? 1.0 : 0.0;
	} else {
		w = 1.0 - Phi(((s2 + v2) - (s1 + v1))/sqrt(lambda * lambda + lambda * lambda));
	}
	
	COLOR = mix(t2, t1, w);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_hhb1v"]
shader = SubResource("Shader_xfafi")
shader_parameter/lambda = 0.01
shader_parameter/T1 = ExtResource("3_0cb56")
shader_parameter/T2 = ExtResource("4_ok2eu")
shader_parameter/S1 = ExtResource("1_lwhil")
shader_parameter/S2 = ExtResource("2_ndve1")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_nmwlc"]
shader = SubResource("Shader_xfafi")
shader_parameter/lambda = 0.1
shader_parameter/T1 = ExtResource("3_0cb56")
shader_parameter/T2 = ExtResource("4_ok2eu")
shader_parameter/S1 = ExtResource("1_lwhil")
shader_parameter/S2 = ExtResource("2_ndve1")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0pt5u"]
shader = SubResource("Shader_xfafi")
shader_parameter/lambda = 0.5
shader_parameter/T1 = ExtResource("3_0cb56")
shader_parameter/T2 = ExtResource("4_ok2eu")
shader_parameter/S1 = ExtResource("1_lwhil")
shader_parameter/S2 = ExtResource("2_ndve1")

[node name="Control" type="Control"]
layout_mode = 3
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="ColorRect" type="ColorRect" parent="."]
layout_mode = 1
offset_right = 515.0
offset_bottom = 517.0
color = Color(0, 0, 0, 1)

[node name="Lambda1" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_qe4i8")
layout_mode = 0
offset_right = 1024.0
offset_bottom = 1024.0

[node name="Control" type="Control" parent="."]
visible = false
layout_mode = 3
anchors_preset = 0
offset_left = 2.0
offset_top = 2.0
offset_right = 2.0
offset_bottom = 2.0
scale = Vector2(2, 2)
script = ExtResource("5_cke6x")
path = "pres_A.png"

[node name="Lambda2" type="ColorRect" parent="Control"]
material = SubResource("ShaderMaterial_hhb1v")
layout_mode = 0
offset_top = 129.0
offset_right = 513.0
offset_bottom = 257.0

[node name="Lambda3" type="ColorRect" parent="Control"]
material = SubResource("ShaderMaterial_nmwlc")
layout_mode = 0
offset_top = 258.0
offset_right = 513.0
offset_bottom = 386.0

[node name="Lambda4" type="ColorRect" parent="Control"]
material = SubResource("ShaderMaterial_0pt5u")
layout_mode = 0
offset_top = 387.0
offset_right = 513.0
offset_bottom = 515.0
